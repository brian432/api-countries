{"version":3,"sources":["componentes/form.js","componentes/paises.js","App.js","index.js"],"names":["Formulario","handleChange","nigthMode","handleSubmit","onSubmit","id","className","length","type","placeholder","name","onChange","hidden","defaultValue","value","Paises","datos","handleBackClick","handleCountry","map","pais","indice","flag","population","region","capital","onClick","src","alt","nativeName","subregion","topLevelDomain","languages","currencies","borders","e","i","code","App","useState","setDatos","filter","setFilter","setNigthMode","useEffect","json","a","fetch","peticion","resultado","target","preventDefault","children","mayuscula","charAt","toUpperCase","slice","elemento","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.098a98c5.chunk.js","sourcesContent":["const Formulario = ({ handleChange, nigthMode, handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div id=\"search\" className={`${nigthMode.length === 0 ? \"boxShadow\" : \"\"} ${nigthMode && nigthMode[1]}`}>\r\n                <button type=\"submit\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </button>\r\n                <input type=\"search\" placeholder=\"Search for a country...\" />\r\n            </div>\r\n            <select name=\"select-Conect\" onChange={handleChange} className={`${nigthMode.length === 0 ? \"boxShadow\" : \"\"} ${nigthMode && nigthMode[1]}`}>\r\n                <option hidden defaultValue=\"Filter by Region\">Filter by Region</option>\r\n                <option value=\"Africa\">Afr√≠ca</option>\r\n                <option value=\"Americas\">America</option>\r\n                <option value=\"Asia\">Asia</option>\r\n                <option value=\"Europe\">Europe</option>\r\n                <option value=\"Oceania\">Oceania</option>\r\n            </select>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Formulario;","const Paises = ({ datos, nigthMode, handleBackClick, handleCountry }) => {\r\n    return (\r\n        <div id={datos.length !== 1 ? \"paises\":\"\"}>\r\n            {datos.length !== 1 ?\r\n                datos.map((pais, indice) => {\r\n                    const { flag, name, population, region, capital } = pais;\r\n                    return (\r\n                        <div key={name} onClick={() => handleCountry(name)} className={`cuadros-paises ${nigthMode && nigthMode[1]} ${nigthMode.length === 0 ? \"boxShadow\" : \"\"}`}>\r\n                            <div className=\"div-img\">\r\n                                <img src={flag} alt={name}/>\r\n                            </div>\r\n                            <div className=\"datos\">\r\n                                <h1>{name}</h1>\r\n                                <p><strong>Population:</strong> {population}</p>\r\n                                <p><strong>Region:</strong> {region}</p>\r\n                                <p><strong>Capital:</strong> {capital}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }) :\r\n                datos.map((pais, indice) => {\r\n                    const {\r\n                        flag,\r\n                        name,\r\n                        nativeName,\r\n                        population,\r\n                        region,\r\n                        subregion,\r\n                        capital,\r\n                        topLevelDomain,//[]\r\n                        languages//[{}]\r\n                    } = pais;\r\n                    const currencies=[\r\n                        ...pais.currencies || []\r\n                    ];\r\n                    const borders=[\r\n                        ...pais.borders||[]\r\n                    ];\r\n                    return (\r\n                        <div>\r\n                            <button onClick={handleBackClick} className={`${nigthMode.length === 0 ? \"boxShadow\" : \"\"} ${nigthMode && nigthMode[1]} back`}>\r\n                                <i className=\"fas fa-arrow-left\"></i>\r\n                                Back\r\n                            </button>\r\n                            <div className=\"cuadro-pais\">\r\n                                <div className=\"div-img-alone\">\r\n                                    <img src={flag}  alt={name}/>\r\n                                </div>\r\n                                <div className= {`${nigthMode.length!==0 && \"colorNigth\"} datos-alone`}>\r\n                                    <div>\r\n                                        <h1>{name}</h1>\r\n                                        <p><strong>Native Name:</strong> {nativeName}</p>\r\n                                        <p><strong>Population:</strong> {population}</p>\r\n                                        <p><strong>Region:</strong> {region}</p>\r\n                                        <p><strong>Sub Region:</strong> {subregion}</p>\r\n                                        <p><strong>Capital:</strong> {capital}</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p><strong>Top Level Domain:</strong> {topLevelDomain.map((e, i) => <span key={i}>{e} </span>)}</p>\r\n                                        <p><strong>Currencies:</strong> {currencies.map((e, i) => <span key={i}>{e.code} </span>)}</p>\r\n                                        <p><strong>Languages:</strong> {languages.map((e, i) => <span key={i}>{e.name} </span>)}</p>\r\n                                    </div>\r\n                                    <div className=\"span\">\r\n                                        {\r\n                                            borders.length!==0 && <p><strong>Border Countries:</strong> {borders.map((e, i) => <span className={`${nigthMode.length === 0 ? \"boxShadow\" : \"\"} ${nigthMode && nigthMode[1]}`} key={i}>{e} </span>)}</p>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paises;","import { useState, useEffect } from 'react'\nimport Form from './componentes/form'\nimport Paises from './componentes/paises'\nimport './assets/estilo/estilo.css'\nfunction App() {\n\n  const [datos, setDatos] = useState([]);\n  const [filter, setFilter] = useState([]);\n  const [nigthMode, setNigthMode] = useState([]);\n\n  useEffect(() => {\n    json();\n  }, []);\n\n  const json = async () => {\n    let peticion = await fetch('https://restcountries.com/v2/all');\n    let resultado = await peticion.json();\n    setDatos(resultado);\n    setFilter(resultado)\n  };\n  const handleChange = (e) => {\n    const value = e.target.value;\n    const resultado = datos.filter(i => i.region === value);\n    setFilter(resultado)\n  }\n\n  const handleNigthMode = () => {\n    nigthMode.length === 0 ? setNigthMode([\"noche\", \"noche2\"]) : setNigthMode([]);\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const value = e.target.children[0].children[1].value;\n    const mayuscula = value.charAt(0).toUpperCase()+value.slice(1);\n    const resultado = datos.filter(i=>i.name === mayuscula)\n    setFilter(resultado)\n  }\n\n  const handleBackClick = () =>{\n    setFilter(datos)\n  }\n\n  const handleCountry = (elemento) =>{\n    const resultado = datos.filter(i=>i.name === elemento);\n    setFilter(resultado)\n  }\n  return (\n    <div className=\"App\">\n      <header className={`${nigthMode && nigthMode[1]} ${nigthMode.length === 0 ? \"boxShadow\" : \"\"}`}>\n        <h1>Where in the world</h1>\n        <button onClick={handleNigthMode} className={nigthMode && nigthMode[1]}>\n          {\n            nigthMode.length===0?<><i className=\"far fa-moon\"></i>Dark Mode</>:<><i className=\"far fa-sun\"></i>Day Mode</>\n          }\n        </button>\n      </header>\n      <main className={nigthMode && nigthMode[0]}>\n        {\n          filter.length!==1 && <Form handleChange={handleChange} nigthMode={nigthMode} handleSubmit={handleSubmit}/>\n        }\n        <Paises datos={filter} nigthMode={nigthMode} handleBackClick={handleBackClick} handleCountry={handleCountry}/>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/estilo/estilo.css'\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}